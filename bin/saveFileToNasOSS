#!/bin/bash

# if [[ "$HOSTNAME" != "NDLT7" ]]; then
#     echo "ERROR: This script may only be used on 'NDLT7'. Current device is '$HOSTNAME'."
#     exit 0
# fi
CONF=$HOME/.config/saveFileToNasOSS.conf
if [[ -e $CONF ]]; then
    source $HOME/.config/saveFileToNasOSS.conf
fi
if [[ -z "$OSS_SERVERS_LIST" ]]; then
    # Example: OSS_SERVERS_LIST='osshost.example.com|/home/oss/ossdir|https://oss.example.com'
    echo "[ERROR] You should set OSS_SERVERS_LIST variable in $CONF"
    echo "The value should look like:"
    echo "    osshost.example.com|/home/oss/ossdir|https://oss.example.com"
    echo "    [ssh hostname]|[base directory path]|[http/https access prefix]"
    exit 0
fi

if [[ -z "$OSS_SUBDIR" ]]; then
    OSS_SUBDIR=misc/
fi

function _save_commit() {
    REMOTE_HOST="$(cut -d'|' -f1 <<< "$SERVER")"
    REMOTE_PATH="$(cut -d'|' -f2 <<< "$SERVER")"
    REMOTE_WEB="$(cut -d'|' -f3 <<< "$SERVER")"
    REMOTE_SSH="$REMOTE_HOST:$REMOTE_PATH"
    if [[ ! -z "$OSS_SUBDIR" ]]; then
        ssh oss@"$REMOTE_HOST" "mkdir -p '${REMOTE_PATH}/${SUBDIR}'"
    fi
    scp "$FILEFULLPATH" oss@"${REMOTE_SSH}/${RELPATH}" >/dev/null 2>&1
    echo "${REMOTE_WEB}/${RELPATH}"
}
function _save() {
    FILEFULLPATH="$1"
    SUBDIR="$2"
    NEWFN="$3"
    RELPATH="${SUBDIR}${NEWFN}"
    IFS=$'\n'
    if [[ -z "$R" ]]; then
        for SERVER in $OSS_SERVERS_LIST; do
            ### Not trying match a specific remote
            _save_commit
        done
    else
        printf ''
        SERVER="$(grep "$R" <<< "$OSS_SERVERS_LIST" | head -n1)"
        # echo "debug: SERVER=$SERVER" >&2
        _save_commit
    fi
}


if [[ -z "$1" ]]; then
    echo "Usage:

    saveFileToNasOSS File.txt                       Volatile link only
    saveFileToNasOSS File.txt -p                    Volatile & Persistent links
    saveFileToNasOSS File.txt -P                    Persistent link only
    OSS_SUBDIR=doc/ saveFileToNasOSS File.txt       Save to a specific subdir
    R=exm.io saveFileToNasOSS File.txt              Save to the first remote which contains the substring
"
    exit 0
fi


## Common
FILEFULLPATH="$(realpath "$1")"
FNMAIN="$(basename -- "$FILEFULLPATH")"

if [[ "$FNMAIN" != *"."* ]]; then
    echo "[ERROR] File must have extension name."
    exit 1
fi


DATEMARK="$(date +%Y-%m-%d)"
REALSALT="$RandomSalt001:$DATEMARK"     # A new salt every day; files need GC!
EXTNAME="${FNMAIN/*./}"


## Volatile version
if [[ " $@ " != *" -P "* ]]; then
    PATHHASH="$(echo "$REALSALT:$FILEFULLPATH" | sha256sum)"
    PATHHASH="${PATHHASH:0:32}"
    NEWFN="$FNMAIN--$DATEMARK-$PATHHASH.$EXTNAME"
    _save "$FILEFULLPATH" "e/${OSS_SUBDIR}" "${NEWFN}"
fi

## Persistent version
if [[ " $@ " == *" -p "* ]] || [[ " $@ " == *" -P "* ]]; then
    PATHHASH="$(echo "9187a2d6fb134aa5ab0b:$FILEFULLPATH" | sha256sum)"
    PATHHASH="${PATHHASH:0:32}"
    NEWFN="$FNMAIN-$PATHHASH.$EXTNAME"
    _save "$FILEFULLPATH" "p/${OSS_SUBDIR}" "${NEWFN}"
fi
