#!/bin/bash

################################################################################
#
# FLS: File Logical Spliter (Version 0.1.0)
# Copyright (c) 2020 Neruthes <i@neruthes.xyz>
# Published under GNU GPLv2 <https://www.gnu.org/licenses/gpl-2.0.html>.
# Invoke this program via "fls" command.
#
################################################################################


### Internal Functions
### -------------------------------------------
function getFileSize() {
    FilePath="$1"
    TMP="/tmp/fls-getFileSize-$(uuidgen)"
    du --bytes "$FilePath" > $TMP
    FileName="$(basename $FilePath)"
    sed -i "s/\s${FileName}//g" $TMP
    echo "$(cat $TMP)"
    rm $TMP
}
function fdiv_ceil() {
    CalcFctr=$(($1/$2))
    CalcRmnt=$(($1%$2))
    if [[ $CalcRamt == 0 ]]; then
        printf $CalcFctr
    else
        printf $(($CalcFctr+1))
    fi
}
if [[ $(fdiv_ceil 10001 10000) == 2 ]]; then
    printf ""
else
    echo "WARNING: A bug is detected in fdiv_ceil!"
fi
function mkSparseSlices() {
    echo "TEST: ChunkSize=$ChunkSize"
    TotalChunks=$(fdiv_ceil $FileSize $ChunkSize)
    echo "INFO: Will create ${TotalChunks} chunks in total."
    MetaFile="${TargetDir}/fls_metadata.txt"
    echo "FLSMetadataFile FormatVer1" > $MetaFile
    echo "FileName=${InputName}" >> $MetaFile
    echo "Chunks=${TotalChunks}" >> $MetaFile
    echo "ChunkSize=${ChunkSize}" >> $MetaFile
    # echo "FileSize=${FileSize}" >> $MetaFile
    echo "INFO: Created metadata file at $MetaFile"
    echo "-------------------------------------------------"
    cat $MetaFile
    echo "-------------------------------------------------"
    for (( i = 0; i < $TotalChunks; i++ )); do
        ChunkFileName="fls.chunk-${i}"
        echo "INFO: Creating chunk $ChunkFileName"
        if [[ $(($i+1)) == $TotalChunks ]]; then
            # This is the last write
            ThisChunkSize=$(($FileSize % $ChunkSize))
        else
            ThisChunkSize=$ChunkSize
        fi
        TmpErrLog=/tmp/fls-tmp-error-log.txt
        dd iflag=skip_bytes if=${InputPath} of="${TargetDir}/${ChunkFileName}" skip=$(($i*$ChunkSize)) bs=${ThisChunkSize} count=1 > $TmpErrLog 2>&1
        if [[ $? == 0 ]]; then
            printf ""
        else
            echo "Error: Something happened."
            echo "-------------------------------------------"
            cat $TmpErrLog
            rm $TmpErrLog
            exit 1
        fi
    done
    echo "Done."
}
function aggregateChunks() {
    echo "INFO: Starting aggregation..."
    OutputPath="$PWD/fls_merged--$MD_FileName-$(date +%s)"
    for (( i = 0; i < $MD_Chunks; i++ )); do
        echo "INFO: Emerging chunk ${i}..."
        TmpErrLog=/tmp/fls-tmp-error-log.txt
        dd oflag=seek_bytes if="$ContentDir/fls.chunk-${i}" of="$OutputPath" seek=$(($i*$MD_ChunkSize)) bs=${MD_ChunkSize} count=1 > $TmpErrLog 2>&1
        if [[ $? == 0 ]]; then
            printf ""
        else
            echo "Error: Something happened."
            echo "-------------------------------------------"
            cat $TmpErrLog
            rm $TmpErrLog
            exit 1
        fi
    done
    du -h $OutputPath
    echo "Done."
}


### Arguments
### -------------------------------------------

SUBCOMMAND=$1


### Constants
### -------------------------------------------

DistDirName=flsdist
DefaultChunkSize=$((8*1024*1024))
# DefaultChunkSize=$((8*1024))


### Main Logic
### -------------------------------------------

if [[ x$SUBCOMMAND == 'x' ]]; then
    $0 help
    exit 0
fi

case $SUBCOMMAND in
    "split" | "s" )
        export InputPath="$2"
        export InputName="$(basename $InputPath)"
        export ChunkSize="$DefaultChunkSize"
        export TargetDir="$PWD/${InputName}.chunks"
        export FileSize="$(getFileSize $InputPath)"
        mkdir -p "$TargetDir"
        echo "INFO: Starting..."
        echo "INFO: Created directory '${TargetDir}'."
        echo "INFO: ChunkSize $(($ChunkSize/1024)) KiB"
        mkSparseSlices
        ;;
    "merge" | "m" )
        echo "FLS: Merge"
        # echo "Feature not implemented yet."
        export ContentDir="$2"
        export MetaFile="$ContentDir/fls_metadata.txt"
        # Get FileName
        MD_FileName=$(cat $MetaFile | grep "FileName=")
        MD_FileName=${MD_FileName:9}
        echo "INFO: FileName is '$MD_FileName'..."
        # Get Chunks
        MD_Chunks=$(cat $MetaFile | grep "Chunks=")
        MD_Chunks=${MD_Chunks:7}
        echo "INFO: Aggregating $MD_Chunks chunks..."
        # Get ChunkSize
        MD_ChunkSize=$(cat $MetaFile | grep "ChunkSize=")
        MD_ChunkSize=${MD_ChunkSize:10}
        echo "INFO: ChunkSize is $MD_ChunkSize bytes..."
        # Start actual aggretation
        aggregateChunks
        ;;
    "help" | "h" )
        echo ' '
        echo 'FLS (File Logical Spliter) | Version 0.1.0'
        echo ' '
        echo 'Copyright (c) 2020 Neruthes. Free software. Published under GNU GPLv2.'
        echo ' '
        echo 'Usage:'
        echo '    fls split /path/to/file           Split the file to $PWD/$FileName.chunks/'
        echo '    fls merge /path/to/dir            Merge the chunks to $PWD/fls_merged--$FileName-$Timestamp'
        echo '        '
        ;;
esac
